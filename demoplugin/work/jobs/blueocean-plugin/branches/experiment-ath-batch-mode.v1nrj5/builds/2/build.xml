<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.22">
  <actions>
    <org.jenkinsci.plugins.workflow.cps.replay.ReplayFlowFactoryAction plugin="workflow-cps@2.54">
      <replacementLoadedScripts/>
    </org.jenkinsci.plugins.workflow.cps.replay.ReplayFlowFactoryAction>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>adildsw</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
        <entry>
          <org.jenkinsci.plugins.workflow.cps.replay.ReplayCause plugin="workflow-cps@2.54">
            <originalNumber>1</originalNumber>
          </org.jenkinsci.plugins.workflow.cps.replay.ReplayCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <jenkins.scm.api.SCMRevisionAction plugin="scm-api@2.2.7">
      <sourceId>blueocean</sourceId>
      <revision class="jenkins.plugins.git.AbstractGitSCMSource$SCMRevisionImpl" plugin="git@3.9.1">
        <head class="org.jenkinsci.plugins.github_branch_source.BranchSCMHead" plugin="github-branch-source@2.3.6">
          <name>experiment/ath-batch-mode</name>
        </head>
        <hash>82f680f91919aed780ed7b9fa9a479cae6606ecb</hash>
      </revision>
    </jenkins.scm.api.SCMRevisionAction>
    <jenkins.scm.api.SCMRevisionAction plugin="scm-api@2.2.7">
      <sourceId>blueocean</sourceId>
      <revision class="jenkins.plugins.git.AbstractGitSCMSource$SCMRevisionImpl" plugin="git@3.9.1">
        <head class="org.jenkinsci.plugins.github_branch_source.BranchSCMHead" reference="../../../jenkins.scm.api.SCMRevisionAction/revision/head"/>
        <hash>82f680f91919aed780ed7b9fa9a479cae6606ecb</hash>
      </revision>
    </jenkins.scm.api.SCMRevisionAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.9">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
  </actions>
  <queueId>148</queueId>
  <timestamp>1531379116509</timestamp>
  <startTime>1531379116781</startTime>
  <result>FAILURE</result>
  <duration>356590</duration>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>#!groovy

// only 20 builds
properties([buildDiscarder(logRotator(artifactNumToKeepStr: &apos;20&apos;, numToKeepStr: &apos;20&apos;))])

node() {
  stage(&apos;Setup&apos;) {
    deleteDir()
    checkout scm
    sh &apos;docker build -t blueocean_build_env --build-arg GID=$(id -g ${USER}) --build-arg UID=$(id -u ${USER}) - &lt; Dockerfile.build&apos;
    withCredentials([file(credentialsId: &apos;blueoceandeploy_ath&apos;, variable: &apos;FILE&apos;)]) {
      sh &apos;mv $FILE acceptance-tests/live.properties&apos;
    }
    configFileProvider([configFile(fileId: &apos;blueocean-maven-settings&apos;, variable: &apos;MAVEN_SETTINGS&apos;)]) {
      sh &apos;mv $MAVEN_SETTINGS settings.xml&apos;
    }
    withCredentials([file(credentialsId: &apos;blueocean-ath-private-repo-key&apos;, variable: &apos;FILE&apos;)]) {
      sh &apos;mv $FILE acceptance-tests/bo-ath.key&apos;
    }
    sh &quot;./acceptance-tests/runner/scripts/start-selenium.sh&quot;
  }

  docker.image(&apos;blueocean_build_env&apos;).inside(&quot;--net=container:blueo-selenium&quot;) {
    withEnv([&apos;GIT_COMMITTER_EMAIL=me@hatescake.com&apos;,&apos;GIT_COMMITTER_NAME=Hates&apos;,&apos;GIT_AUTHOR_NAME=Cake&apos;,&apos;GIT_AUTHOR_EMAIL=hates@cake.com&apos;]) {
      try {
        stage(&apos;Building JS Libraries&apos;) {
          sh &apos;node -v &amp;&amp; npm -v&apos;
          sh &apos;npm --prefix ./js-extensions run build&apos;
          sh &apos;npm --prefix ./jenkins-design-language run build&apos;
          sh &apos;npm --prefix ./blueocean-core-js run build&apos;
        }

        stage(&apos;Building BlueOcean&apos;) {
          sh &quot;mvn clean install -B -DcleanNode -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dmaven.test.failure.ignore -s settings.xml -Dmaven.artifact.threads=30&quot;
          junit &apos;**/target/surefire-reports/TEST-*.xml&apos;
          junit &apos;**/target/jest-reports/*.xml&apos;
          archive &apos;*/target/*.hpi&apos;
        }

        stage(&apos;Sanity check dependencies&apos;) {
          sh &quot;node ./bin/checkdeps.js&quot;
          sh &quot;node ./bin/checkshrinkwrap.js&quot;
        }

        stage(&apos;ATH - Jenkins 2.46.3&apos;) {
          sh &quot;cd acceptance-tests &amp;&amp; ./run.sh -v=2.46.3 --no-selenium --settings=&apos;-s ${env.WORKSPACE}/settings.xml&apos;&quot;
          junit &apos;acceptance-tests/target/surefire-reports/*.xml&apos;
          archive &apos;acceptance-tests/target/screenshots/*&apos;
        }

        if (env.JOB_NAME =~ &apos;blueocean-weekly-ath&apos;) {
          stage(&apos;ATH - Jenkins 2.60.1&apos;) {
            sh &quot;cd acceptance-tests &amp;&amp; ./run.sh -v=2.60.1 --no-selenium --settings=&apos;-s ${env.WORKSPACE}/settings.xml&apos;&quot;
            junit &apos;acceptance-tests/target/surefire-reports/*.xml&apos;
          }
        }


      } catch(err) {
        currentBuild.result = &quot;FAILURE&quot;

        if (err.toString().contains(&apos;exit code 143&apos;)) {
          currentBuild.result = &quot;ABORTED&quot;
        }
      } finally {
        stage(&apos;Cleanup&apos;) {
          sh &quot;${env.WORKSPACE}/acceptance-tests/runner/scripts/stop-selenium.sh&quot;
          sendhipchat()
          deleteDir()
        }
      }
    }
  }
}


def sendhipchat() {
  res = currentBuild.result
  if(currentBuild.result == null) {
    res = &quot;SUCCESS&quot;
  }
  message = &quot;${env.JOB_NAME} #${env.BUILD_NUMBER}, status: ${res} (&lt;a href=&apos;${env.RUN_DISPLAY_URL}&apos;&gt;Open&lt;/a&gt;)&quot;
  color = null
  if(currentBuild.result == &quot;UNSTABLE&quot;) {
      color = &quot;YELLOW&quot;
  } else if(currentBuild.result == &quot;SUCCESS&quot; || currentBuild.result == null){
      color = &quot;GREEN&quot;
  } else if(currentBuild.result == &quot;FAILURE&quot;) {
      color = &quot;RED&quot;
  } else if(currentBuild.result == &quot;ABORTED&quot;) {
      color = &quot;GRAY&quot;
  }
  if(color != null) {
      hipchatSend message: message, color: color
  }
}
</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>3961127625</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>444512194</long>
      </entry>
      <entry>
        <string>run</string>
        <long>5188284799</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>384665142</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>19048202</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>15</iota>
    <head>1:15</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.scm.NullSCM"/>
      <node></node>
      <workspace>/home/adildsw/jenkins-plugins/demoplugin/work/jobs/blueocean-plugin/branches/experiment-ath-batch-mode.v1nrj5/workspace</workspace>
      <changelogFile>/home/adildsw/jenkins-plugins/demoplugin/work/jobs/blueocean-plugin/branches/experiment-ath-batch-mode.v1nrj5/builds/2/changelog0.xml</changelogFile>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>